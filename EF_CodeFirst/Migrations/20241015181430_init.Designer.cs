// <auto-generated />
using System;
using EF_CodeFirst.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_CodeFirst.Migrations
{
    [DbContext(typeof(EF_CodeFirstDbContext))]
    [Migration("20241015181430_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_CodeFirst.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            GradeName = "Odličan",
                            Section = "Matematika",
                            StudentId = 1
                        },
                        new
                        {
                            GradeId = 2,
                            GradeName = "Vrlo dobar",
                            Section = "Kemija",
                            StudentId = 1
                        },
                        new
                        {
                            GradeId = 3,
                            GradeName = "Dobar",
                            Section = "Fizika",
                            StudentId = 2
                        },
                        new
                        {
                            GradeId = 4,
                            GradeName = "Dovoljan",
                            Section = "Geografija",
                            StudentId = 2
                        },
                        new
                        {
                            GradeId = 5,
                            GradeName = "Nedovoljan",
                            Section = "Engleski",
                            StudentId = 1
                        },
                        new
                        {
                            GradeId = 6,
                            GradeName = "Dobar",
                            Section = "Hrvatski",
                            StudentId = 2
                        },
                        new
                        {
                            GradeId = 7,
                            GradeName = "Odličan",
                            Section = "Latinski",
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("EF_CodeFirst.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nchar(50)");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DateOfBirth = new DateTime(1991, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 1.9m,
                            StudentName = "Marko Marić",
                            Width = 50.349998474121094
                        },
                        new
                        {
                            StudentId = 2,
                            DateOfBirth = new DateTime(2001, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 1.7m,
                            StudentName = "Pero Perić",
                            Width = 60.659999847412109
                        });
                });

            modelBuilder.Entity("EF_CodeFirst.Models.Grade", b =>
                {
                    b.HasOne("EF_CodeFirst.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
